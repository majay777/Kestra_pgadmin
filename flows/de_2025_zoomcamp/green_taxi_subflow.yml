id: green_taxi_subflow
namespace: null

inputs:
  - id: taxi
    type: ARRAY
    itemType: STRING
    displayName: Choose Taxi
    description: Choose the taxi, which data to get from url.
    defaults:
      - yellow
      - green
    
  
  - id: year
    type: ARRAY
    itemType: STRING
    displayName: Select Year
    defaults:
      - '2021'
      - '2019'
    
  
  - id: month
    type: ARRAY
    itemType: STRING
    displayName: Select a month
    defaults:
      - '01'
      - '02'

tasks:
  - id: if_green_taxi
    type: io.kestra.plugin.core.flow.If
    condition: '{{ inputs.taxi == "green" }}'
    then:
      - id: green_create_table
        type: io.kestra.plugin.jdbc.postgresql.Queries
        sql: |
            CREATE TABLE IF NOT EXISTS "public.{{inputs.taxi}}_tripdata" (

                      unique_row_id          text,
                      filename               text,
                      VendorID               text,
                      lpep_pickup_datetime   timestamp,
                      lpep_dropoff_datetime  timestamp,
                      store_and_fwd_flag     text,
                      RatecodeID             text,
                      PULocationID           text,
                      DOLocationID           text,
                      passenger_count        float,
                      trip_distance          double precision,
                      fare_amount            double precision,
                      extra                  double precision,
                      mta_tax                double precision,
                      tip_amount             double precision,
                      tolls_amount           double precision,
                      ehail_fee              double precision,
                      improvement_surcharge  double precision,
                      total_amount           double precision,
                      payment_type           float,
                      trip_type              float,
                      congestion_surcharge   double precision
                          );
    
      - id: create_green_staging_table
        type: io.kestra.plugin.jdbc.postgresql.Queries
        sql: |
                    CREATE TABLE IF NOT EXISTS public.{{inputs.taxi}}_tripdata_staging (
                      unique_row_id          text,
                      filename               text,
                      VendorID               text,
                      lpep_pickup_datetime   timestamp,
                      lpep_dropoff_datetime  timestamp,
                      store_and_fwd_flag     text,
                      RatecodeID             text,
                      PULocationID           text,
                      DOLocationID           text,
                      passenger_count        float,
                      trip_distance          double precision,
                      fare_amount            double precision,
                      extra                  double precision,
                      mta_tax                double precision,
                      tip_amount             double precision,
                      tolls_amount           double precision,
                      ehail_fee              double precision,
                      improvement_surcharge  double precision,
                      total_amount           double precision,
                      payment_type           float,
                      trip_type              float,
                      congestion_surcharge   double precision
                        );

      - id: truncate_green_Table
        type: io.kestra.plugin.jdbc.postgresql.Queries
        sql: |
                          TRUNCATE TABLE public.{{inputs.taxi}}_tripdata_staging
        
      - id: green_copy_in_staging_table
        type: io.kestra.plugin.jdbc.postgresql.CopyIn
        format: CSV
        from: "{{ outputs.Extract_data.outputFiles[{{inputs.taxi}}_taxi_tripdata_{{inputs.year}}_{{inputs.month}}.csv]}}"
        table: public.{{inputs.taxi}}_tripdata_staging
        header: true
        columns: [VendorID,lpep_pickup_datetime,lpep_dropoff_datetime,store_and_fwd_flag,RatecodeID,PULocationID,DOLocationID,passenger_count,trip_distance,fare_amount,extra,mta_tax,tip_amount,tolls_amount,ehail_fee,improvement_surcharge,total_amount,payment_type,trip_type,congestion_surcharge]

      - id: green_add_unique_key_and_filename
        type: io.kestra.plugin.jdbc.postgresql.Queries
        sql: |
                        UPDATE {{public.{{inputs.taxi}}_tripdata_staging}}
                        SET 
                          unique_row_id = md5(
                          COALESCE(CAST(VendorID AS text), '') ||
                          COALESCE(CAST(lpep_pickup_datetime AS text), '') || 
                          COALESCE(CAST(lpep_dropoff_datetime AS text), '') || 
                          COALESCE(PULocationID, '') || 
                          COALESCE(DOLocationID, '') || 
                          COALESCE(CAST(fare_amount AS text), '') || 
                          COALESCE(CAST(trip_distance AS text), '')    
                          ),
                          filename = '{{inputs.taxi}}_taxi_tripdata_{{inputs.year}}_{{inputs.month}}.csv';
      - id: green_merge_data
        type: io.kestra.plugin.jdbc.postgresql.Queries
        sql: |
                        MERGE INTO {{public.{{inputs.taxi}}_tripdata}} AS T
                        USING {{public.{{inputs.taxi}}_tripdata_staging}} AS S
                        ON T.unique_row_id = S.unique_row_id
                        WHEN NOT MATCHED THEN
                          INSERT (
                          unique_row_id, filename, VendorID, lpep_pickup_datetime, lpep_dropoff_datetime,
                          store_and_fwd_flag, RatecodeID, PULocationID, DOLocationID, passenger_count,
                          trip_distance, fare_amount, extra, mta_tax, tip_amount, tolls_amount, ehail_fee,
                          improvement_surcharge, total_amount, payment_type, trip_type, congestion_surcharge
                          )
                          VALUES (
                          S.unique_row_id, S.filename, S.VendorID, S.lpep_pickup_datetime, S.lpep_dropoff_datetime,
                          S.store_and_fwd_flag, S.RatecodeID, S.PULocationID, S.DOLocationID, S.passenger_count,
                          S.trip_distance, S.fare_amount, S.extra, S.mta_tax, S.tip_amount, S.tolls_amount, S.ehail_fee,
                          S.improvement_surcharge, S.total_amount, S.payment_type, S.trip_type, S.congestion_surcharge
                          );


pluginDefaults:
  - type: io.kestra.plugin.jdbc.postgresql
    values: 
      url: jdbc:postgresql://postgres_db:5432/ny_taxi
      username: ny_taxi_user
      password: ny_taxi_user_password